### gp-utils-ascii2bin
```bash
gp-utils-ascii2bin [options] <datafile>

Options:
  -h [ --help ]              print help message.
  -o [ --output ] arg        file to write output to.
  -m [ --memory-efficient ]  use memory efficient method. required if dataset 
                             cannot fit into memory at once.
  -x [ --overwrite ]         overwrite existing output files.

Arguments:
  <datafile>      the datafile to convert.

Converts an ASCII 3D Gnuplot datafile to binary matrix format (see http://gnuplot.sourceforge.net/docs_4.2/node330.html).
Only 3 column files with regularly coordinates are supported (i.e. only files that can be plotted with `splot` with
a mesh.

NOTE: Gnuplot the x-y coordinates in its binary matrix file format between
versions 4 and 5. The gp-utils tools ASSUME THE VERSION 4 FORMAT. This means
that you will need to swap the x and y axes when using splot if you are using
Gnuplot version 5. See page 196 of http://www.gnuplot.info/docs_5.2/Gnuplot_5.2.pdf
and http://gnuplot.sourceforge.net/docs_4.2/node330.html.

  > splot 'ascii-datafile.txt', 'binary-datafile.bin' using 2:1:3

Examples:

  Convert 3 column ASCII data file named 'data.txt' to binary matrix data file named 'data.bin'
    
    $ gp-utils-ascii2bin data.txt

  By default, gp-utils-ascii2bin won't overwrite the output file if it exists. Use the -x option to override this.
  Convert 3 column ASCII data file named 'data.txt' to binary matrix data file named 'data.bin', overwriting it if
  it already exists.

    $ gp-utils-ascii2bin -x data.txt

  Convert 3 column ASCII data file named 'data.txt' to binary matrix data file named 'binary-data.bin', overwriting it if
  it already exists.

    $ gp-utils-ascii2bin -x -o binary-data.bin data.txt

```

### gp-utils-bin2ascii
```bash
gp-utils-bin2ascii [options] <datafile>

Options:
  -h [ --help ]         print help message.
  -o [ --output ] arg   file to write output to.
  -x [ --overwrite ]    overwrite existing output files.

Arguments:
  <datafile>      the datafile to convert.



Converts a Gnuplot binary matrix datafile (see http://gnuplot.sourceforge.net/docs_4.2/node330.html) to ASCII (plain text).
Only 3 column files with regularly coordinates are supported (i.e. only files that can be plotted with `splot` with
a mesh.

NOTE: Gnuplot the x-y coordinates in its binary matrix file format between
versions 4 and 5. The gp-utils tools ASSUME THE VERSION 4 FORMAT. This means
that you will need to swap the x and y axes when using splot if you are using
Gnuplot version 5. See page 196 of http://www.gnuplot.info/docs_5.2/Gnuplot_5.2.pdf
and http://gnuplot.sourceforge.net/docs_4.2/node330.html.

  > splot 'ascii-datafile.txt', 'binary-datafile.bin' using 2:1:3

Examples:

  Convert binary matrix data file named 'data.bin' to a 3 column ASCII data file named 'data.txt'.
    
    $ gp-utils-bin2ascii data.bin

  By default, gp-utils-bin2ascii won't overwrite the output file if it exists. Use the -x option to override this.
  Convert binary matrix data file named 'data.bin' to a 3 column ASCII data file named 'data.txt', overwriting it if
  it already exists.

    $ gp-utils-bin2ascii -x data.bin

  Convert binary matrix data file named 'data.bin' to a 3 column ASCII data file named 'plain-text-data.txt', overwriting it if
  it already exists.

    $ gp-utils-bin2ascii -x -o plain-text-data.bin data.bin

```

### gp-utils-cyl2rec
```bash
gp-utils-cyl2rec [options] <datafile>

Options:
  -h [ --help ]         print help message.
  -o [ --output ] arg   file to write output to.
  -e [ --every ] arg    gnuplot 'every' string to apply.
  -x [ --overwrite ]    overwrite existing output files.

Arguments:
  <datafile>      the datafile to read.



Create a Cartesian datafile from cylindrical data.

This tool reads a Gnuplot binary matrix datafile, interprets the x-y coordinates as z-r coordinates, creates an x-y slices
each z coordinates, and writes them to new binary matrix datafiles. This is useful if you are working with
azmuthally symmetric function and want to create a plot of the profile at some z slice. For example, to generate a plot
of the beam profile of a circular Gaussian beam at multiple positions along the propagation axis.

NOTE: Gnuplot the x-y coordinates in its binary matrix file format between
versions 4 and 5. The gp-utils tools ASSUME THE VERSION 4 FORMAT. This means
that you will need to swap the x and y axes when using splot if you are using
Gnuplot version 5. See page 196 of http://www.gnuplot.info/docs_5.2/Gnuplot_5.2.pdf
and http://gnuplot.sourceforge.net/docs_4.2/node330.html.

  > splot 'ascii-datafile.txt', 'binary-datafile.bin' using 2:1:3


Examples:


```

### gp-utils-extract
```bash
gp-utils-extract [options] <datafile>

Options:
  -h [ --help ]         print help message.
  -o [ --output ] arg   file to write output to.
  -e [ --every ] arg    gnuplot 'every' string to apply.
  -x [ --overwrite ]    overwrite existing output files.

Arguments:
  <datafile>      the datafile to read.




Extracts a sub-block of data from a Gnuplot binary matrix data file (see http://gnuplot.sourceforge.net/docs_4.2/node330.html).
The sub-block to extract is specified using Gnuplot's every option syntax (i.e. ::10:5:20:10).
See http://gnuplot.sourceforge.net/docs_4.2/node121.html

NOTE: Gnuplot the x-y coordinates in its binary matrix file format between
versions 4 and 5. The gp-utils tools ASSUME THE VERSION 4 FORMAT. This means
that you will need to swap the x and y axes when using splot if you are using
Gnuplot version 5. See page 196 of http://www.gnuplot.info/docs_5.2/Gnuplot_5.2.pdf
and http://gnuplot.sourceforge.net/docs_4.2/node330.html.

  > splot 'ascii-datafile.txt', 'binary-datafile.bin' using 2:1:3

However, Gnuplot's the every option syntax is based on ASCII file format, which assumes
consecutive points in a block have different y coordinates with the same x coordinate.
So Gnuplot's start_point and stop_point correspond to y coordinates, and start_block and
stop_block correspond to x coordinates. See http://gnuplot.sourceforge.net/docs_4.2/node121.html
for documentation on the every option.

Examples:

  Extract all points from the 5'th to 10'th x coordinates (inclusive) from a binary data file
  named 'data.bin' and write a new binary data file named 'data.extracted.bin':

  > gp-utils-extract -e :::5::10 data.bin

  Extract all points from the 5'th to 10'th x coordinates (inclusive), and the
  3rd to 8th y coordinates from a binary data file named 'data.bin' and write a
  new binary data file named 'data.extracted.bin', overwriting if it already
  exists:

  > gp-utils-extract -x -e :::5:3:10:8 data.bin

```

### gp-utils-info
```bash
gp-utils-info [options] <datafile>

Options:
  -h [ --help ]         print help message.

Arguments:
  <datafile>      the datafile to read.



Reads a Gnuplot binary matrix datafile (see http://gnuplot.sourceforge.net/docs_4.2/node330.html) and prints
information about it, such as the number of x coordinates, number of y coordinates, etc. This is useful when
extracting data from a binary file.

NOTE: Gnuplot the x-y coordinates in its binary matrix file format between
versions 4 and 5. The gp-utils tools ASSUME THE VERSION 4 FORMAT. This means
that you will need to swap the x and y axes when using splot if you are using
Gnuplot version 5. See page 196 of http://www.gnuplot.info/docs_5.2/Gnuplot_5.2.pdf
and http://gnuplot.sourceforge.net/docs_4.2/node330.html.

  > splot 'ascii-datafile.txt', 'binary-datafile.bin' using 2:1:3

```

